apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kudu-master
  namespace: apache-kudu
  labels:
    app: kudu-master
spec:
  serviceName: kudu-masters
  podManagementPolicy: "Parallel"
  replicas: 3
  selector:
    matchLabels:
      app: kudu-master
  template:
    metadata:
      labels:
        app: kudu-master
    spec:
      containers:
        - name: kudu-master
          image: kubernetesbigdataeg/kudu:1.17.0-1
          #imagePullPolicy: IfNotPresent
          imagePullPolicy: Always
          env:
            - name: GET_HOSTS_FROM
              value: dns
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          args: ["master"]
          ports:
            - containerPort: 8051
              name: master-ui
            - containerPort: 7051
              name: master-rpc
          volumeMounts:
            - name: datadir
              mountPath: /mnt/data0
            - name: kudu-env
              mountPath: /etc/environments
            - name: kudu-config
              mountPath: /opt/kudu/conf              
      volumes:
        - name: kudu-env
          configMap:
            name: kudu-config
        - name: kudu-config
          hostPath:
            path: /kudu-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: 
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kudu-tserver
  namespace: apache-kudu
  labels:
    app: kudu-tserver
spec:
  serviceName: kudu-tservers
  podManagementPolicy: "Parallel"
  replicas: 4
  selector:
    matchLabels:
      app: kudu-tserver
  template:
    metadata:
      labels:
        app: kudu-tserver
    spec:
      containers:
        - name: kudu-tserver
          image: kubernetesbigdataeg/kudu:1.17.0-1
          #imagePullPolicy: IfNotPresent
          imagePullPolicy: Always
          env:
            - name: GET_HOSTS_FROM
              value: dns
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          args: ["tserver"]
          ports:
            - containerPort: 8050
              name: tserver-ui
            - containerPort: 7050
              name: tserver-rpc
          volumeMounts:
            - name: datadir
              mountPath: /mnt/data0
            - name: kudu-env
              mountPath: /etc/environments
            - name: kudu-config
              mountPath: /opt/kudu/conf              
      volumes:
        - name: kudu-env
          configMap:
            name: kudu-config
        - name: kudu-config
          hostPath:
            path: /kudu-config
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      # partition option will be useful for staging update scenario,
      partition: 0
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: 
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi